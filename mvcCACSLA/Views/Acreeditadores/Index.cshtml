@model IEnumerable<mvcCACSLA.Models.Indicadores>
@using mvcCACSLA.Models;
@using mvcCACSLA.Models.Constantes;

@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}




<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>



<h3 class="text-center"><span class="label label-primary">Indicadores Observados</span></h3>
<br />

<table class="table table-striped table-hover table-condensed">
    <thead>
        <tr>

            <th>
                Categoria
            </th>
            <th>
                Variable
            </th>
            <th>
                Descripción Variable
            </th>
            <th>

            </th>
            <th>
                Criterio
            </th>
            <th>
                Valor Maximo
            </th>
            <th>
                Valor Obtenido
            </th>
            <th>
                Evidencias
            </th>
            <th></th>
        </tr>
    </thead>

    @foreach (var item in Model)
    {
        <tbody>
            <tr>

                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.IdEstandar)
                </td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.IdVariable)
                </td>
                <td class="text-justify">
                    @Html.DisplayFor(modelItem => item.DescripcionVariable)
                    @Html.HiddenFor(modelItem => item.DescripcionEstandar)


                </td>
                <td>
                    @Html.Raw("<a data-modal='' href='" + Url.Action("VerFundamentacion", "Indicadores_detalle", new { idestandar = item.IdEstandar, idvariable = item.IdVariable }) + "' title='Ver Fundamentacion'> <span class='glyphicon glyphicon-list-alt'> </span> </a>")

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DescripcionReferente)
                    @Html.HiddenFor(modelItem => item.Referente)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ValorMax, new { htmlAttributes = new { @class = "form-control,", @disabled = "disabled" } })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ValorObt, new { htmlAttributes = new { @class = "form-control,", @disabled = "disabled" } })
                    @Html.HiddenFor(modelItem => item.IdCoordinacion)
                    @Html.HiddenFor(modelItem => item.Anexo)
                </td>
                <td>

                    @if (item.Indicadores_archivos.Count() > 0)
                    {
                        UserManager UM = new UserManager();
                        string role = UM.GetUserRole(User.Identity.Name);
                        switch (role)
                        {
                            case EstandarNum.RoleAcree:
                                if (item.Indicadores_archivos.Count() == 0)
                                {
                                    @*@Html.ActionLink("Agregar", "Index", "Indicadores_archivos", new { idestandar = item.IdEstandar, idvariable = item.IdVariable }, new { @class = "btn btn-default btn-sm" })*@
                                }
                                else
                                {
                                    @Html.ActionLink(@item.Indicadores_archivos.Count().ToString() + " Archivo(s)", "Index", "Indicadores_archivos", new { idestandar = item.IdEstandar, idvariable = item.IdVariable }, new { @class = "btn btn-primary btn-sm" })
                                }
                                break;
                            case EstandarNum.RoleCoord:
                            case EstandarNum.RoleUser:

                                int idcarrera = UM.GetUserCarrera(User.Identity.Name);
                                bool b = UM.GetUserSubeCarreras(User.Identity.Name);
                                if (b == EstandarNum.SubeCarreas)
                                {
                                    if (item.Indicadores_archivos.Count() == 0)
                                    {
                                        @Html.ActionLink("Agregar", "Index", "Indicadores_archivos", new { idestandar = item.IdEstandar, idvariable = item.IdVariable }, new { @class = "btn btn-default btn-sm" })
                                    }
                                    else
                                    {
                                        @Html.ActionLink(@item.Indicadores_archivos.Count().ToString() + " Archivo(s)", "Index", "Indicadores_archivos", new { idestandar = item.IdEstandar, idvariable = item.IdVariable }, new { @class = "btn btn-primary btn-sm" })
                                    }
                                }
                                else
                                {
                                    if (item.Indicadores_archivos.Where(a => a.IdCarrera == idcarrera).Count() == 0)
                                    {
                                        @Html.ActionLink("Agregar", "Index", "Indicadores_archivos", new { idestandar = item.IdEstandar, idvariable = item.IdVariable }, new { @class = "btn btn-default btn-sm" })
                                    }
                                    else
                                    {
                                        @Html.ActionLink(@item.Indicadores_archivos.Where(a => a.IdCarrera == idcarrera).Count().ToString() + " Archivo(s)", "Index", "Indicadores_archivos", new { idestandar = item.IdEstandar, idvariable = item.IdVariable }, new { @class = "btn btn-primary btn-sm" })
                                    }

                                }


                                break;
                        }

                    }
                    else
                    {

                        @Html.ActionLink("Agregar", "Index", "Indicadores_archivos", new { idestandar = item.IdEstandar, idvariable = item.IdVariable }, new { @class = "btn btn-default btn-sm" })
                    }
                </td>
                @*<td>



                    @*<a href="javascript:void(0);" id="deleteItem" class="btn btn-default btn-sm">Guardar</a>*@

            </tr>
        </tbody>


    }
</table>

@*<input type="submit" id="btnGuardar" value="Guardar" class="btn btn-primary" />*@
@*}*@

<br />


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
       $('#deleteItem').click(function (e) {
           e.preventDefault();
           var valor = $('.valor').val();
           alert(valor.toString);


       });

       $(function () {
           $.ajaxSetup({ cache: false });
           $("a[data-modal]").on("click", function (e) {
               $('#myModalContent').load(this.href, function () {
                   $('#myModal').modal({
                                    keyboard: true
                   }, 'show');
                                bindForm(this);
                            });
                            return false;
                        });
                    });

       function bindForm(dialog) {
           $('form', dialog).submit(function () {
               $('#progress').show();
               $.ajax({
                   url: this.action,
                   type: this.method,
                   data: $(this).serialize(),
                   success: function (result) {
                       if (result.success) {
                           $('#myModal').modal('hide');
                           $('#progress').hide();
                           //location.reload();
                       } else {
                           $('#progress').hide();
                           $('#myModalContent').html(result);
                           bindForm();
                       }
                   }
               });
               return false;
           });
       }

    </script>
}
