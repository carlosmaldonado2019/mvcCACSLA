@*@model IEnumerable<mvcCACSLA.Models.Indicadores>*@
@model PagedList.IPagedList<mvcCACSLA.Models.Indicadores>
@using System.Web.UI.WebControls;
@using PagedList.Mvc;
@using mvcCACSLA.Models;
@using mvcCACSLA.Models.Constantes;

@*<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">*@

@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .modal_fundamentacion {
        top: 50%;
        left: 50%;
        margin: 300px auto;
        margin-top: -75px;
        margin-left: -75px;
        position: absolute;
        /*z-index: 999;*/
        /*height: 100%;
            width: 100%;
            top: 0;
            left: 0;
            background-color: Black;
            filter: alpha(opacity=60);
            opacity: 0.6;
            -moz-opacity: 0.8;*/
    }

    .center {
        /*z-index: 1000;*/
        /*margin: 300px auto;
            padding: 10px;
            width: 130px;
            /*background-color: White;
            border-radius: 10px;
            filter: alpha(opacity=100);
            opacity: 1;
            -moz-opacity: 1;*/ */;
    }

        .center img {
            height: 128px;
            width: 128px;
        }
</style>



<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>



<h3 class="text-center"><span class="label label-primary">@ViewBag.Title</span></h3>
<br />



@*<div class="alert alert-success" role="alert"></div>*@

<div class="row">
    <div class="col-md-6">
        @if (@TempData["Message"] != null)
        {
            <div class="alert alert-success alert-dismissible" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                @TempData["Message"]
            </div>
        }

    </div>

</div>



@using (Html.BeginForm("GuardarValores", "Indicadores"))

{

    <div class="modal_fundamentacion" style="display: none">
        <div class="text-center">
            <img alt="" src=~/Content/imagenes/ajax-loader.gif />
        </div>
    </div>


        @Html.AntiForgeryToken()
        <table class="table table-striped table-hover table-condensed">
            <thead>
                <tr>
                    <th>
                        Categoria
                    </th>
                    <th>
                        Variable
                    </th>
                    <th>
                        Descripción Variable
                    </th>
                    <th>

                    </th>
                    <th>
                        Criterio
                    </th>
                    <th>
                        Valor Maximo
                    </th>
                    <th>
                        Valor Obtenido
                    </th>
                    <th>
                        Evidencias
                    </th>
                    <th></th>
                </tr>
            </thead>

            @foreach (var item in Model)

            {

                <tbody>
                    <tr>
                        @*<td>
                               @Html.ActionLink("Editar", "Edit", new { idestandar = item.IdEstandar,idvariable = item.IdVariable }) |
                            </td>*@
                        <td class="text-center">
                            @Html.DisplayFor(modelItem => item.IdEstandar)
                        </td>
                        <td class="text-center">
                            @Html.DisplayFor(modelItem => item.IdVariable)
                        </td>
                        <td class="text-justify">
                            @Html.DisplayFor(modelItem => item.DescripcionVariable)
                            @Html.HiddenFor(modelItem => item.DescripcionEstandar)


                        </td>
                        <td>
                            @Html.Raw("<a data-modal='' href='" + Url.Action("VerFundamentacion", "Indicadores_detalle", new { idestandar = item.IdEstandar, idvariable = item.IdVariable }) + "' title='Ver Fundamentacion'> <span class='glyphicon glyphicon-list-alt'> </span> </a>")

                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DescripcionReferente)
                            @Html.HiddenFor(modelItem => item.Referente)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ValorMax)
                        </td>
                        <td>
                            @*@Html.EditorFor(modelItem => item.ValorObt, new { htmlAttributes = new { @class = "form-control", @min = "0", @max = "20" } })*@
                            <input id="valores" type="number" name="valores" min="0" max="20" value="@item.ValorObt" />
                            <input type="hidden" name="variables" value="@item.IdVariable" />
                            <input type="hidden" name="estandar" value="@item.IdEstandar" />
                            <input type="hidden" name="pagina" value="@Model.PageNumber" />
                            @Html.HiddenFor(modelItem => item.IdCoordinacion)
                            @Html.HiddenFor(modelItem => item.Anexo)
                        </td>
                        <td>

                            @if (item.Indicadores_archivos.Count() > 0)
                            {
                                UserManager UM = new UserManager();
                                string role = UM.GetUserRole(User.Identity.Name);
                                switch (role)
                                {
                                    case EstandarNum.RoleAdmin:
                                        if (item.Indicadores_archivos.Count() == 0)
                                        {
                                            @Html.ActionLink("Agregar", "Index", "Indicadores_archivos", new { idestandar = item.IdEstandar, idvariable = item.IdVariable }, new { @class = "btn btn-default btn-sm" })
                                        }
                                        else
                                        {
                                            @Html.ActionLink(@item.Indicadores_archivos.Count().ToString() + " Archivo(s)", "Index", "Indicadores_archivos", new { idestandar = item.IdEstandar, idvariable = item.IdVariable }, new { @class = "btn btn-primary btn-sm" })
                                        }
                                        break;
                                    case EstandarNum.RoleCoord:
                                    case EstandarNum.RoleUser:

                                        int idcarrera = UM.GetUserCarrera(User.Identity.Name);
                                        bool b = UM.GetUserSubeCarreras(User.Identity.Name);
                                        if (b == EstandarNum.SubeCarreas)
                                        {
                                            if (item.Indicadores_archivos.Count() == 0)
                                            {
                                                @Html.ActionLink("Agregar", "Index", "Indicadores_archivos", new { idestandar = item.IdEstandar, idvariable = item.IdVariable }, new { @class = "btn btn-default btn-sm" })
                                            }
                                            else
                                            {
                                                @Html.ActionLink(@item.Indicadores_archivos.Count().ToString() + " Archivo(s)", "Index", "Indicadores_archivos", new { idestandar = item.IdEstandar, idvariable = item.IdVariable }, new { @class = "btn btn-primary btn-sm" })
                                            }
                                        }
                                        else
                                        {
                                            if (item.Indicadores_archivos.Where(a => a.IdCarrera == idcarrera).Count() == 0)
                                            {
                                                @Html.ActionLink("Agregar", "Index", "Indicadores_archivos", new { idestandar = item.IdEstandar, idvariable = item.IdVariable }, new { @class = "btn btn-default btn-sm" })
                                            }
                                            else
                                            {
                                                @Html.ActionLink(@item.Indicadores_archivos.Where(a => a.IdCarrera == idcarrera).Count().ToString() + " Archivo(s)", "Index", "Indicadores_archivos", new { idestandar = item.IdEstandar, idvariable = item.IdVariable }, new { @class = "btn btn-primary btn-sm" })
                                            }

                                        }


                                        break;
                                }

                            }
                            else
                            {

                                @Html.ActionLink("Agregar", "Index", "Indicadores_archivos", new { idestandar = item.IdEstandar, idvariable = item.IdVariable }, new { @class = "btn btn-default btn-sm" })
                            }
                        </td>
                        @*<td>



                            @*<a href="javascript:void(0);" id="deleteItem" class="btn btn-default btn-sm">Guardar</a>*@

                    </tr>
                </tbody>


            }
        </table>

        @*<input type="submit" id="btnGuardar" value="Guardar" class="btn btn-primary" />*@
        <input type="submit" value="Guardar" class="btn btn-primary" id="btnGuardar" />
}

<br />


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

       //$("#btnGuardar").click(function () {
       //    debugger;
       //    var person = getValores();


       //    function getValores() {
       //        var name = [$(".valores").val()];


       //        // poor man's validation
       //        return (name == "") ? null : { Name: name };
       //    }

       //    $.ajax(
       //    {

       //        type: "POST", //HTTP POST Method
       //        url: "Indicadores/GuardarValores", // Controller/View
       //        data: $(this).serialize()


       //    });

       //});


       $(function () {
           $.ajaxSetup({
               cache: false,
               beforeSend: function () {
                   $(".modal_fundamentacion").show();
               },
               complete: function () {
                   //$("modal").css("display", "none");
                   $(".modal_fundamentacion").hide();
               }
           });
           $("a[data-modal]").on("click", function (e) {

               $('#myModalContent').load(this.href, function () {

                   $('#myModal').modal({
                                keyboard: true
                   }, 'show');
                                bindForm(this);
                            });
                            return false;
                        });
                    });

       function bindForm(dialog) {

           $('form', dialog).submit(function () {
               $('#progress').show();
               $.ajax({

                   url: this.action,
                   type: this.method,
                   data: $(this).serialize(),
                   success: function (result) {
                       if (result.success) {
                           $('#myModal').modal('hide');
                           $('#progress').hide();
                           //location.reload();
                       } else {
                           $('#progress').hide();
                           $('#myModalContent').html(result);
                           bindForm();
                       }
                   }
               });
               return false;
           });
       }

    </script>
}
Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new { page }))